506,507c506,507
<         if cssdict or pseudo_classes:
<             keep_classes = set()
---
>         # if cssdict or pseudo_classes:
>         #     keep_classes = set()
509,524c509,524
<             if cssdict:
<                 items = sorted(cssdict.iteritems())
<                 css = u';\n'.join(u'%s: %s' % (key, val) for key, val in items)
<                 classes = node.get('class', '').strip() or 'calibre'
<                 # lower() because otherwise if the document uses the same class
<                 # name with different case, both cases will apply, leading
<                 # to incorrect results.
<                 klass = ascii_text(STRIPNUM.sub('', classes.split()[0])).lower().strip().replace(' ', '_')
<                 if css in styles:
<                     match = styles[css]
<                 else:
<                     match = klass + str(names[klass] or '')
<                     styles[css] = match
<                     names[klass] += 1
<                 node.attrib['class'] = match
<                 keep_classes.add(match)
---
>         #     if cssdict:
>         #         items = sorted(cssdict.iteritems())
>         #         css = u';\n'.join(u'%s: %s' % (key, val) for key, val in items)
>         #         classes = node.get('class', '').strip() or 'calibre'
>         #         # lower() because otherwise if the document uses the same class
>         #         # name with different case, both cases will apply, leading
>         #         # to incorrect results.
>         #         klass = ascii_text(STRIPNUM.sub('', classes.split()[0])).lower().strip().replace(' ', '_')
>         #         if css in styles:
>         #             match = styles[css]
>         #         else:
>         #             match = klass + str(names[klass] or '')
>         #             styles[css] = match
>         #             names[klass] += 1
>         #         node.attrib['class'] = match
>         #         keep_classes.add(match)
526,544c526,544
<             for psel, cssdict in pseudo_classes.iteritems():
<                 items = sorted(cssdict.iteritems())
<                 css = u';\n'.join(u'%s: %s' % (key, val) for key, val in items)
<                 pstyles = pseudo_styles[psel]
<                 if css in pstyles:
<                     match = pstyles[css]
<                 else:
<                     # We have to use a different class for each psel as
<                     # otherwise you can have incorrect styles for a situation
<                     # like: a:hover { color: red } a:link { color: blue } a.x:hover { color: green }
<                     # If the pcalibre class for a:hover and a:link is the same,
<                     # then the class attribute for a.x tags will contain both
<                     # that class and the class for a.x:hover, which is wrong.
<                     klass = 'pcalibre'
<                     match = klass + str(names[klass] or '')
<                     pstyles[css] = match
<                     names[klass] += 1
<                 keep_classes.add(match)
<                 node.attrib['class'] = ' '.join(keep_classes)
---
>         #     for psel, cssdict in pseudo_classes.iteritems():
>         #         items = sorted(cssdict.iteritems())
>         #         css = u';\n'.join(u'%s: %s' % (key, val) for key, val in items)
>         #         pstyles = pseudo_styles[psel]
>         #         if css in pstyles:
>         #             match = pstyles[css]
>         #         else:
>         #             # We have to use a different class for each psel as
>         #             # otherwise you can have incorrect styles for a situation
>         #             # like: a:hover { color: red } a:link { color: blue } a.x:hover { color: green }
>         #             # If the pcalibre class for a:hover and a:link is the same,
>         #             # then the class attribute for a.x tags will contain both
>         #             # that class and the class for a.x:hover, which is wrong.
>         #             klass = 'pcalibre'
>         #             match = klass + str(names[klass] or '')
>         #             pstyles[css] = match
>         #             names[klass] += 1
>         #         keep_classes.add(match)
>         #         node.attrib['class'] = ' '.join(keep_classes)
546,547c546,547
<         elif 'class' in node.attrib:
<             del node.attrib['class']
---
>         # elif 'class' in node.attrib:
>         #     del node.attrib['class']
