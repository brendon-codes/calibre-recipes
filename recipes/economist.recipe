
#!/usr/bin/env python2
# vim:fileencoding=utf-8

from __future__ import (
    unicode_literals,
    division,
    absolute_import,
    print_function
)
from calibre.web.feeds.news import BasicNewsRecipe
import datetime
from dateutil import relativedelta


class TheEconomistRecipe(BasicNewsRecipe):
    title = "The Economist"
    oldest_article = 9
    max_articles_per_feed = 200
    auto_cleanup   = True
    use_embedded_content = False
    publication_type = "magazine"
    needs_subscription = True
    handle_gzip = True
    timefmt = ""

    x_feeds = [
        (
            "The World This Week",
            "https://www.economist.com/rss/the_world_this_week_rss.xml"
        ),
        (
            "Leaders",
            "https://www.economist.com/feeds/print-sections/69/leaders.xml"
        ),
        (
            "Briefings",
            "https://www.economist.com/feeds/print-sections/102/briefings2.xml"
        ),
        (
            "Special Reports",
            "https://www.economist.com/"
            "feeds/print-sections/103/special-reports.xml"
        ),
        (
            "United States",
            "https://www.economist.com/"
            "feeds/print-sections/71/united-states.xml"
        ),
        (
            "Britain",
            "https://www.economist.com/feeds/print-sections/76/britain.xml"
        ),
        (
            "Europe",
            "https://www.economist.com/feeds/print-sections/75/europe.xml"
        ),
        (
            "The Americas",
            "https://www.economist.com/"
            "feeds/print-sections/72/the-americas.xml"
        ),
        (
            "Middle East and Africa",
            "https://www.economist.com/"
            "feeds/print-sections/99/middle-east-africa.xml"
        ),
        (
            "Asia",
            "https://www.economist.com/feeds/print-sections/73/asia.xml"
        ),
        (
            "China",
            "https://www.economist.com/feeds/print-sections/77729/china.xml"
        ),
        (
            "International",
            "https://www.economist.com/"
            "feeds/print-sections/74/international.xml"
        ),
        (
            "Business",
            "https://www.economist.com/feeds/print-sections/77/business.xml"
        ),
        (
            "Finance and Economica",
            "https://www.economist.com/"
            "feeds/print-sections/79/finance-and-economics.xml"
        ),
        (
            "Science and Technology",
            "https://www.economist.com/"
            "feeds/print-sections/80/science-and-technology.xml"
        )
    ]

    def prepend_feeds(self):
        return [
            (
                "Cover",
                self.get_cover_url()
            )
        ]

    def get_feeds(self):
        return (
            self.prepend_feeds() +
            self.x_feeds
        )

    def get_issue_date_start(self):
        now = datetime.datetime.now()
        rel = relativedelta.relativedelta(weekday=relativedelta.FR(-1))
        offset = datetime.timedelta(days=1)
        offdt = ((now + rel) + offset)
        newdt = datetime.datetime(
            year=offdt.year,
            month=offdt.month,
            day=offdt.day
        )
        return newdt

    def get_articles_date_start(self):
        now = datetime.datetime.now()
        rel = relativedelta.relativedelta(weekday=relativedelta.TH(-1))
        offset = datetime.timedelta(days=5)
        offdt = ((now + rel) - offset)
        newdt = datetime.datetime(
            year=offdt.year,
            month=offdt.month,
            day=offdt.day
        )
        return newdt

    def get_articles_date_end(self):
        now = datetime.datetime.now()
        rel = relativedelta.relativedelta(weekday=relativedelta.TH(-1))
        offset = datetime.timedelta(days=1)
        offdt = ((now + rel) + offset)
        newdt = datetime.datetime(
            year=offdt.year,
            month=offdt.month,
            day=offdt.day
        )
        return newdt

    def get_cover_url(self):
        root = (
            "https://cdn.static-economist.com/"
            "sites/default/files/imagecache/"
            "print-cover-full/print-covers/{date}_cna400.jpg"
        )
        last_sat = self.get_issue_date_start()
        dt_str = last_sat.strftime("%Y%m%d")
        url = root.format(date=dt_str)
        return url

    def parse_feeds(self):
        arts_date_start = self.get_articles_date_start()
        arts_date_end = self.get_articles_date_end()

        def filt_articles(article):
            artdt = datetime.datetime(*article.date[:6])
            ret = (
                (artdt >= arts_date_start) and
                (artdt < arts_date_end)
            )
            return ret

        def map_feeds(feed):
            feed.articles = filter(filt_articles, feed.articles)
            return feed

        feeds_orig = BasicNewsRecipe.parse_feeds(self)
        feeds = map(map_feeds, feeds_orig)
        return feeds
